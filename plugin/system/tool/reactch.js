const fonts = {
  font1: {
    a: 'üÖê', b: 'üÖë', c: 'üÖí', d: 'üÖì', e: 'üÖî', f: 'üÖï', g: 'üÖñ',
    h: 'üÖó', i: 'üÖò', j: 'üÖô', k: 'üÖö', l: 'üÖõ', m: 'üÖú', n: 'üÖù',
    o: 'üÖû', p: 'üÖü', q: 'üÖ†', r: 'üÖ°', s: 'üÖ¢', t: 'üÖ£', u: 'üÖ§',
    v: 'üÖ•', w: 'üÖ¶', x: 'üÖß', y: 'üÖ®', z: 'üÖ©',
    '0': '‚ìø', '1': '‚ûä', '2': '‚ûã', '3': '‚ûå', '4': '‚ûç',
    '5': '‚ûé', '6': '‚ûè', '7': '‚ûê', '8': '‚ûë', '9': '‚ûí'
  },
  font2: {
    a: 'üÑ∞', b: 'üÑ±', c: 'üÑ≤', d: 'üÑ≥', e: 'üÑ¥', f: 'üÑµ', g: 'üÑ∂',
    h: 'üÑ∑', i: 'üÑ∏', j: 'üÑπ', k: 'üÑ∫', l: 'üÑª', m: 'üÑº', n: 'üÑΩ',
    o: 'üÑæ', p: 'üÑø', q: 'üÖÄ', r: 'üÖÅ', s: 'üÖÇ', t: 'üÖÉ', u: 'üÖÑ',
    v: 'üÖÖ', w: 'üÖÜ', x: 'üÖá', y: 'üÖà', z: 'üÖâ'
  },
  font3: {
    a: 'üÖ∞', b: 'üÖ±', c: 'üÖ≤', d: 'üÖ≥', e: 'üÖ¥', f: 'üÖµ', g: 'üÖ∂',
    h: 'üÖ∑', i: 'üÖ∏', j: 'üÖπ', k: 'üÖ∫', l: 'üÖª', m: 'üÖº', n: 'üÖΩ',
    o: 'üÖæ', p: 'üÖø', q: 'üÜÄ', r: 'üÜÅ', s: 'üÜÇ', t: 'üÜÉ', u: 'üÜÑ',
    v: 'üÜÖ', w: 'üÜÜ', x: 'üÜá', y: 'üÜà', z: 'üÜâ'
  }
}

const handler = async (m, { sock, text }) => {
  if (!text.includes('|')) {
    return m.reply(`Contoh:\n.reactch font1|https://whatsapp.com/channel/abc/123|halo dunia
 Font 1 : üÖêüÖëüÖíüÖì
 Font 2 : üÑ∞üÑ±üÑ≤üÑ≥
 Font 3 : üÖ∞üÖ±üÖ≤üÖ≥`)
  }

  let [fontKey, link, ...messageParts] = text.split('|')
  fontKey = fontKey.trim().toLowerCase()
  link = link.trim()
  const msg = messageParts.join('|').trim().toLowerCase()

  if (!fonts[fontKey]) {
    return m.reply(`Font tidak dikenal. Gunakan salah satu dari: ${Object.keys(fonts).join(', ')}`)
  }

  if (!link.startsWith("https://whatsapp.com/channel/")) {
    return m.reply("Link tidak valid. Harus diawali dengan https://whatsapp.com/channel/")
  }

  const gaya = fonts[fontKey]
  const emoji = msg.split('').map(c => c === ' ' ? '‚Äï' : (gaya[c] || c)).join('')

  try {
    const [ , , , , channelId, messageId ] = link.split('/')
    const res = await sock.newsletterMsg(channelId, {
    type: 'INFO' });
    await sock.newsletterMsg(res.id, {
    react: emoji,
    id: messageId });
    m.reply(`‚úÖ Reaksi *${emoji}* berhasil dikirim ke channel *${res.name}*.`)
  } catch (e) {
    console.error(e)
    m.reply("‚ùå Error\nGagal mengirim reaksi. Cek link atau koneksi!")
  }
}

handler.command = ['reactch', 'rch']
handler.tags = ['tool']

module.exports = handler